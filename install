#!/usr/bin/env bash

GH_REPO="nadi-pro/shipper"
TIMEOUT=90

# Determine the operating system
OS=$(uname -s)
BINARY_PATH="/usr/local/bin"
BINARY_DIRECTORY=""

# Set the default binary path and directory based on the operating system
if [ "${OS}" = "Linux" ]; then
    BINARY_DIRECTORY="/opt/shipper"
elif [ "${OS}" = "Darwin" ]; then
    BINARY_DIRECTORY="/usr/local/shipper"
else
    echo "Unsupported operating system: ${OS}"
    exit 1
fi

# Get the current logged-in user
USERNAME=$USER

set -e

VERSION=$(curl --silent --location --max-time "${TIMEOUT}" "https://api.github.com/repos/${GH_REPO}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
if [ ! "$VERSION" ]; then
    echo -ne "\nThere was an error trying to check what is the latest version of shipper.\nPlease try again later.\n"
    exit 1
fi

# detect the platform
OS="$(uname)"
case $OS in
Linux)
    OS='linux'
    ;;
Darwin)
    OS='darwin'
    ;;
*)
    echo 'OS not supported'
    exit 2
    ;;
esac

# detect the arch
OS_type="$(uname -m)"
case "$OS_type" in
x86_64 | amd64)
    OS_type='amd64'
    ;;
i?86 | x86)
    OS_type='386'
    ;;
aarch64 | arm64)
    OS_type='arm64'
    ;;
*)
    echo 'OS type not supported'
    exit 2
    ;;
esac

GH_REPO_BIN="shipper-${VERSION}-${OS}-${OS_type}.tar.gz"

#create tmp directory and move to it with macOS compatibility fallback
tmp_dir=$(mktemp -d 2>/dev/null || mktemp -d -t 'shipper-install.XXXXXXXXXX')
cd "$tmp_dir"

echo "Downloading shipper $VERSION"
LINK="https://github.com/${GH_REPO}/releases/download/${VERSION}/${GH_REPO_BIN}"

curl --silent --location --max-time "${TIMEOUT}" "${LINK}" | tar zxf - || {
    echo "Error downloading"
    exit 2
}

cp shipper "${BINARY_PATH}" || exit 2
chmod 755 "${BINARY_PATH}/shipper" || exit 2
case "$OS" in
'linux')
    chown root:root "${BINARY_PATH}/shipper" || exit 2
    ;;
'freebsd' | 'openbsd' | 'netbsd' | 'darwin')
    chown root:wheel "${BINARY_PATH}/shipper" || exit 2
    ;;
*)
    echo 'OS not supported'
    exit 2
    ;;
esac

mkdir -p "${BINARY_DIRECTORY}" || exit 2
wget -O "${BINARY_DIRECTORY}/nadi.yaml" "https://github.com/nadi-pro/shipper/raw/master/nadi.reference.yaml"
echo "Downloaded nadi.reference.yaml and saved as ${BINARY_DIRECTORY}/nadi.yaml."

rm -rf "$tmp_dir"
echo "Installed successfully to ${BINARY_PATH}"

# Create a Systemd unit file
SERVICE_DIRECTORY="/etc/systemd/system/"
case "$OS" in
'darwin')
    SERVICE_DIRECTORY="/Library/LaunchDaemons/" || exit 2
    ;;
*)
    echo 'OS not supported'
    exit 2
    ;;
esac

sudo tee "${SERVICE_DIRECTORY}shipper.service" > /dev/null <<EOF
[Unit]
Description=Shipper Service
After=network.target

[Service]
ExecStart=${BINARY_PATH} --config=${BINARY_DIRECTORY}/nadi.yaml
WorkingDirectory=${BINARY_DIRECTORY}
Restart=always
User=${USERNAME}

[Install]
WantedBy=multi-user.target
EOF

# Enable and start the service
echo "Run sudo systemctl enable shipper.service to enable shipper to start on reboot"
echo "Run sudo systemctl start shipper.service to run the service"

echo "Shipper service has been installed."
